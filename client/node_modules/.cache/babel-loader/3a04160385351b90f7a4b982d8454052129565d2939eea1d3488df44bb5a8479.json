{"ast":null,"code":"import CryptoJS from'crypto-js';const SECRET_KEY='your-secret-key-123';// In production, this should be user-provided\nexport const encryptData=data=>{return CryptoJS.AES.encrypt(JSON.stringify(data),SECRET_KEY).toString();};export const decryptData=ciphertext=>{const bytes=CryptoJS.AES.decrypt(ciphertext,SECRET_KEY);return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));};","map":{"version":3,"names":["CryptoJS","SECRET_KEY","encryptData","data","AES","encrypt","JSON","stringify","toString","decryptData","ciphertext","bytes","decrypt","parse","enc","Utf8"],"sources":["C:/Users/neelp/OneDrive/Documents/Elevate Labs/Privacy-Notes-App/client/src/utils/encryption.jsx"],"sourcesContent":["import CryptoJS from 'crypto-js';\r\n\r\nconst SECRET_KEY = 'your-secret-key-123'; // In production, this should be user-provided\r\n\r\nexport const encryptData = (data) => {\r\n  return CryptoJS.AES.encrypt(JSON.stringify(data), SECRET_KEY).toString();\r\n};\r\n\r\nexport const decryptData = (ciphertext) => {\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, SECRET_KEY);\r\n  return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n};"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,WAAW,CAEhC,KAAM,CAAAC,UAAU,CAAG,qBAAqB,CAAE;AAE1C,MAAO,MAAM,CAAAC,WAAW,CAAIC,IAAI,EAAK,CACnC,MAAO,CAAAH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAEF,UAAU,CAAC,CAACO,QAAQ,CAAC,CAAC,CAC1E,CAAC,CAED,MAAO,MAAM,CAAAC,WAAW,CAAIC,UAAU,EAAK,CACzC,KAAM,CAAAC,KAAK,CAAGX,QAAQ,CAACI,GAAG,CAACQ,OAAO,CAACF,UAAU,CAAET,UAAU,CAAC,CAC1D,MAAO,CAAAK,IAAI,CAACO,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACR,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC,CAAC,CACtD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}